import { useState } from 'react';
import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

const ForPassword = () => {
    const [email, setEmail] = useState('');
    const [isSubmitted, setIsSubmitted] = useState(false); // State ƒë·ªÉ ki·ªÉm so√°t vi·ªác hi·ªÉn th·ªã

    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            const response = await fetch('http://127.0.0.1:8000/api/reset/quen-mat-khau', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email }),
            });

            const data = await response.json();

            if (response.ok) {
                // C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë·ªÉ hi·ªÉn th·ªã form th√¥ng b√°o
                setIsSubmitted(true);

                // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
                toast.success(
                    'üéâ M·ªôt li√™n k·∫øt ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email c·ªßa b·∫°n.',
                    {
                        position: 'top-right',
                        autoClose: 5000,
                        hideProgressBar: false,
                        closeOnClick: true,
                        pauseOnHover: true,
                        draggable: true,
                        theme: 'colored',
                    }
                );
            } else {
                // X·ª≠ l√Ω l·ªói t·ª´ server
                toast.error(
                    `‚ùå ${data.message || 'C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i.'}`,
                    {
                        position: 'top-right',
                        autoClose: 5000,
                        hideProgressBar: false,
                        closeOnClick: true,
                        pauseOnHover: true,
                        draggable: true,
                        theme: 'colored',
                    }
                );
            }
        } catch (error) {
            // X·ª≠ l√Ω l·ªói k·∫øt n·ªëi
            toast.error(
                'üö® G·ª≠i y√™u c·∫ßu th·∫•t b·∫°i. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi m·∫°ng ho·∫∑c th·ª≠ l·∫°i sau.',
                {
                    position: 'top-right',
                    autoClose: 5000,
                    hideProgressBar: false,
                    closeOnClick: true,
                    pauseOnHover: true,
                    draggable: true,
                    theme: 'colored',
                }
            );
        }
    };

    return (
        <>
            <style>
                {`
                    body { margin-top: 20px; }
                    .mail-seccess {
                        text-align: center;
                        background: #fff;
                        border-top: 1px solid #eee;
                        padding: 20px;
                    }
                    .mail-seccess .success-inner {
                        display: inline-block;
                        padding: 20px;
                    }
                    .mail-seccess .success-inner h1 {
                        font-size: 50px;
                        color: #006DFE;
                        font-weight: 700;
                    }
                    .mail-seccess .success-inner h1 span {
                        display: block;
                        font-size: 20px;
                        color: #333;
                        font-weight: 600;
                        margin-top: 20px;
                    }
                    .mail-seccess .success-inner p {
                        padding: 20px 15px;
                    }
                    .mail-seccess .success-inner .btn {
                        color: #fff;
                        background-color: #006DFE;
                        padding: 10px 20px;
                        text-decoration: none;
                        border-radius: 5px;
                    }
                    .mail-seccess .success-inner .btn:hover {
                        background-color: #004c9a;
                    }
                    .login-register-area {
                        padding: 50px 0;
                    }
                    .login-register-wrapper {
                        background: #fff;
                        border-radius: 8px;
                        padding: 30px;
                    }
                    .login-register-form input {
                        width: 100%;
                        padding: 15px;
                        margin-bottom: 15px;
                        border: 1px solid #ccc;
                        border-radius: 5px;
                    }
                    .button-box button {
                        width: 100%;
                        padding: 15px;
                        background-color: #006DFE;
                        color: white;
                        border: none;
                        border-radius: 5px;
                        font-size: 16px;
                    }
                    .button-box button:hover {
                        background-color: #004c9a;
                    }
                `}
            </style>

            <link
                href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
                rel="stylesheet"
            />

            {isSubmitted ? (
                // Giao di·ªán khi form ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng
                <section className="mail-seccess section">
                    <div className="container">
                        <div className="row">
                            <div className="col-lg-6 offset-lg-3 col-12">
                                <div className="success-inner">
                                    <h1>
                                        <i className="fa fa-envelope" />
                                        <span>Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i!</span>
                                    </h1>
                                    <p>
                                        Ch√∫ng t√¥i ƒë√£ g·ª≠i m·ªôt li√™n k·∫øt ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë·∫øn email c·ªßa b·∫°n.
                                        Vui l√≤ng ki·ªÉm tra h·ªôp th∆∞ ƒë·∫øn (ho·∫∑c m·ª•c th∆∞ r√°c) v√† l√†m theo h∆∞·ªõng d·∫´n ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.
                                        N·∫øu b·∫°n kh√¥ng nh·∫≠n ƒë∆∞·ª£c email, vui l√≤ng th·ª≠ l·∫°i ho·∫∑c li√™n h·ªá b·ªô ph·∫≠n h·ªó tr·ª£.
                                    </p>
                                    <a href="/" className="btn">Trang ch·ªß</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            ) : (
                // Giao di·ªán form qu√™n m·∫≠t kh·∫©u
                <div className="login-register-area">
                    <div className="container">
                        <div className="row">
                            <div className="col-lg-7 col-md-12 ms-auto me-auto">
                                <div className="login-register-wrapper">
                                    <div className="login-register-tab-list nav">
                                        <h3 className="active">Qu√™n m·∫≠t kh·∫©u</h3>
                                    </div>
                                    <div className="tab-content">
                                        <div className="tab-pane active">
                                            <div className="login-form-container">
                                                <div className="login-register-form">
                                                    <form onSubmit={handleSubmit}>
                                                        <input
                                                            name="user-email"
                                                            placeholder="Email"
                                                            type="email"
                                                            value={email}
                                                            onChange={(e) => setEmail(e.target.value)}
                                                            required
                                                        />
                                                        <div className="button-box">
                                                            <button type="submit"><span>G·ª≠i</span></button>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            )}
        </>
    );
};

export default ForPassword;
