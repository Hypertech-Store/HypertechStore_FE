import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { toast, ToastContainer } from "react-toastify";
import axios from "axios";
import "react-toastify/dist/ReactToastify.css";
import background from "../../../assets/img/illustrations/boy-with-rocket-light.png";

const LoginPage = () => {
    document.title = "Hypertech Store - ƒêƒÉng nh·∫≠p h·ªá th·ªëng Admin";
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [errorMessage, setErrorMessage] = useState("");
    const navigate = useNavigate();

    const handleLogin = async (e) => {
        e.preventDefault();
        try {
            const response = await axios.post("http://127.0.0.1:8000/api/quan-tri-viens/login", {
                email: email,
                mat_khau: password,
            });

            console.log("API Response:", response.data); // Log ph·∫£n h·ªìi API

            const { quantrivien, message } = response.data;
            console.log("Role:", quantrivien.role); // Th√™m log v√†o ƒë√¢y ƒë·ªÉ ki·ªÉm tra gi√° tr·ªã role

            // Ki·ªÉm tra vai tr√≤ v√† l∆∞u th√¥ng tin v√†o localStorage
            if (quantrivien.role === 0 || quantrivien.role === 1) {
                // L∆∞u th√¥ng tin v√†o localStorage
                localStorage.setItem("customRole", quantrivien.role); // L∆∞u role l√† s·ªë, kh√¥ng ph·∫£i chu·ªói
                localStorage.setItem("userName", quantrivien.ten_dang_nhap);
                localStorage.setItem("userAvatar", quantrivien.anh_nguoi_dung || "default-avatar.png"); // S·ª≠ d·ª•ng avatar n·∫øu c√≥

                // Log d·ªØ li·ªáu ƒë√£ l∆∞u v√†o localStorage
                console.log("Stored in localStorage:");
                console.log("customRole:", localStorage.getItem("customRole"));
                console.log("userName:", localStorage.getItem("userName"));
                console.log("userAvatar:", localStorage.getItem("userAvatar"));

                // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
                toast.success(message, {
                    position: "top-right",
                    autoClose: 2000,
                    hideProgressBar: true,
                });

                // S·ª≠ d·ª•ng setTimeout ƒë·ªÉ ƒë·∫£m b·∫£o l∆∞u xong th√¥ng tin tr∆∞·ªõc khi ƒëi·ªÅu h∆∞·ªõng
                setTimeout(() => {
                    console.log("Navigating to /admin...");
                    navigate("/admin");
                }, 1000); // ƒêi·ªÅu h∆∞·ªõng sau 1 gi√¢y
            } else {
                // N·∫øu quy·ªÅn truy c·∫≠p b·ªã t·ª´ ch·ªëi
                setErrorMessage("Quy·ªÅn truy c·∫≠p b·ªã t·ª´ ch·ªëi. Ch·ªâ c√≥ qu·∫£n tr·ªã vi√™n v√† nh√¢n vi√™n m·ªõi c√≥ th·ªÉ ƒëƒÉng nh·∫≠p.");
            }

        } catch (error) {
            console.error("Error during login:", error); // Log l·ªói
            if (error.response && error.response.data) {
                setErrorMessage(error.response.data.message || "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i.");
            } else {
                setErrorMessage("ƒê√£ x·∫£y ra l·ªói. Vui l√≤ng th·ª≠ l·∫°i.");
            }
        }
    };



    return (
        <div className="authentication-wrapper authentication-cover">
            <ToastContainer />
            <div className="authentication-inner row m-0">
                {/* Left Text */}
                <div className="d-none d-lg-flex col-lg-7 col-xl-8 align-items-center p-5">
                    <div className="w-100 d-flex justify-content-center">
                        <img
                            src={background}
                            className="img-fluid"
                            alt="Login image"
                            width={650}
                            style={{ height: "86vh" }}
                        />
                    </div>
                </div>
                {/* /Left Text */}
                {/* Login */}
                <div className="d-flex col-12 col-lg-5 col-xl-4 align-items-center authentication-bg p-sm-12 p-6">
                    <div className="w-px-400 mx-auto mt-12 pt-5">
                        <h4 className="mb-1">Ch√†o m·ª´ng ƒë·∫øn v·ªõi hypertech! üëã</h4>
                        <p className="mb-6">
                            Vui l√≤ng ƒëƒÉng nh·∫≠p v√†o t√†i kho·∫£n c·ªßa b·∫°n v√† b·∫Øt ƒë·∫ßu cu·ªôc phi√™u l∆∞u
                        </p>

                        {/* Form login */}
                        <form onSubmit={handleLogin} className="mb-6">
                            <div className="mb-6">
                                <label htmlFor="email" className="form-label">
                                    Email
                                </label>
                                <input
                                    type="text"
                                    className="form-control"
                                    id="email"
                                    name="email"
                                    placeholder="Nh·∫≠p email"
                                    value={email}
                                    onChange={(e) => setEmail(e.target.value)}
                                    autoFocus
                                />
                            </div>
                            <div className="mb-6 form-password-toggle">
                                <label className="form-label" htmlFor="password">
                                    M·∫≠t kh·∫©u
                                </label>
                                <div className="input-group input-group-merge">
                                    <input
                                        type="password"
                                        id="password"
                                        className="form-control"
                                        name="password"
                                        placeholder="Nh√¢p m·∫≠t kh·∫©u"
                                        value={password}
                                        onChange={(e) => setPassword(e.target.value)}
                                    />
                                    <span className="input-group-text cursor-pointer">
                                        <i className="bx bx-hide" />
                                    </span>
                                </div>
                            </div>
                            <button type="submit" className="btn btn-primary d-grid w-100">
                                ƒêƒÉng nh·∫≠p
                            </button>
                        </form>

                    </div>
                </div>
                {/* /Login */}
            </div>
        </div>
    );
};

export default LoginPage;
